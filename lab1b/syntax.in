Predefined tokens are specified before ":"
ifstmt = "if:" condition ["{"] stmt ["}"] ["else:" ["{"] stmt ["}] ]
whilestmt = "while:" condition ["{"] stmt ["}]
condition = expression relation expression
relation = "<" | "<=" | "&" | "/=" | ">=" | ">" | "|"
structstmt = ifstmt | whilestmt
iostmt = "in:" | "out:" {identifier | type | expression}
program = "{" decllist cmpdstmt "}"
decllist = declaration | declaration ";"{decllist}
declaration = type ":" identifier
type  = type1|arraydecl
type1 = "int" | "char" 
arraydecl = "list" "int" identifier "{" nr "}"
cmpdstmt =  stmtlist 
stmtlist = stmt ";" | stmt ";" stmtlist
stmt = simplstmt | structstmt
simplstmt = assignstmt | iostmt | returnstmt 
returnstmt = "return"
assignstmt = identifier "=" expression
expression = factor {"+" | "-" | "/" | "*"} factor | factor
factor = expression | identifier
